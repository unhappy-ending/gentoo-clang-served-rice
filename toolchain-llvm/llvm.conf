# Replaces GNU's address translator, addr2line.
#
ADDR2LINE="llvm-addr2line"

# Replaces GNU's archiver, ar. You can control its behavior with ARFLAGS, but
# only if it's directly called.
#
AR="llvm-ar"

# Replaces GNU's assembler, as. Kind of.
#
AS="llvm-as"

# Replaces GNU's linker, BFD. You can control its behavior with LDFLAGS when
# indirectly called via the compiler. This only reports the name of the linker
# being used, not forcing LLD over BFD. Since we set LLD as the Clang default
# with USE flags, this will output the proper linker used during configure
# phase checks.
#
LD="ld.lld"

# Replaces GNU's symbol extractor, nm.
#
NM="llvm-nm"

# Replaces GNU's object copier and translater, objcopy.
#
OBJCOPY="llvm-objcopy"

# Replaces GNU's object file dumper, objdump.
#
OBJDUMP="llvm-objdump"

# Replaces GNU's archive index generator, ranlib.
#
RANLIB="llvm-ranlib"

# Replaces GNU's object reader, readelf.
#
READELF="llvm-readelf"

# Replaces GNU's strings printer, strings.
#
STRINGS="llvm-strings"

# Replaces GNU's Object stripping tool, strip.
#
STRIP="llvm-strip"

# Replaces libstdc++ with libc++ in Rust
#
CXXSTDLIB="c++"
