# Compiler overrides. You don't need to use the full path.

# C compiler driver.
#
#  This replaces GCC as the main compiler to use system wide. Control Clang's
#  C compiler behavior by defining flags in the CFLAGS section. All C flags
#  carry over to C++ via the CXXFLAGS variable.
#
CC="clang"

# C pre-processor
#
#  This to replaces CPP as the main pre-processor to use system wide.Control
#  the C pre-processor behavior by defining flags in the CPPFLAGS section.
#
#  This is NOT the same as CXXFLAGS so don't confuse the two!
#
#  Replacing CPP with clang-cpp can cause Portage to complain about unused
#  arguments during pre-merge checks. This is harmless. NOT declaring clang-cpp
#  will cause xorg-server to fail when using Clang as the default compiler.
#
CPP="clang-cpp"

# C++ compiler driver
#
#  Set this to replace G++ as the main C++ compiler. Control the behavior using
#  the CXXFLAGS variable, but do take note of C++ specific flags. C++ can use
#  all C flags, but C can't use all C++ flags, so be careful or Portage will
#  fail the configure phase if you've defined a C++ specific flag in CFLAGS.
#
CXX="clang++"

# Testing
#
#  It's important to make sure tests are run after compilation when not using
#  the Gentoo defaults. Do not disable tests if you want a working system when
#  using an alternative toolchain and non-standard flags.
#
ALLOW_TEST="all"
FEATURES="${FEATURES} test"
