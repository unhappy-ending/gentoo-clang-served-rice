# Replaces GCC as the system compiler. Control the C compiler behavior by
# defining flags via CFLAGS. All C flags carry over to C++ via the CXXFLAGS
# variable.
	CC=clang

# Replaces CPP as the main pre-processor. Control the C pre-processor behavior
# by defining flags via CPPFLAGS. Don't confuse this with CXXFLAGS. Replacing
# CPP with clang-cpp will sometimes cause Portage to complain about unused
# arguments during pre-merge checks. This is harmless. NOT declaring clang-cpp
# will cause xorg-server to fail when using Clang as the default compiler.
	CPP=clang-cpp

# Replaces G++ as the main C++ compiler. Control the behavior via the
# CXXFLAGS variable. Take note of C++ specific flags. C++ can use all C
# flags, but C can't use all C++ flags. Portage will fail the configure phase
# if C++ flags are defined a C++ in CFLAGS.
	CXX=clang++
