# sys-libs/glibc
#  configure phase fails with clang
#  configure phase fails with -flto;
#   remove -fdevirtualize-at-ltrans
#   remove -flto-compression-level=19
#   use -fuse-ld=lld
#  compile phase fails with -ffast-math
#  compile phase fails with -Wl,--gc-sections
#  test phase fails (-O2 failures 8)
#   test phase fails more with -fno-plt (failures +11) (glibc is static)
#   test phase fails more with -fno-sanitize=all (failures +1)
#   test phase fails more with -fno-semantic-interposition (failures +30) (glibc is static)
#   test phase fails more with -O3 (failures +4)
#   test phase fails more with -Wl,-Bsymbolic (segfault) (glibc is static)
#   test phase fails more with -Wl,-Bsymbolic-functions (failures +20) (glibc is static)
#   test phase fails more with -Wl,-z,now (failures +10) (glibc is static)
###############################################################################
CC="gcc"
CPP="cpp"
CXX="g++"
CFLAGS="-march=native -O3 -pipe"
CFLAGS="${CFLAGS} -fcf-protection=none"
CFLAGS="${CFLAGS} -fdata-sections"
#CFLAGS="${CFLAGS} -fdevirtualize-at-ltrans"
#CFLAGS="${CFLAGS} -ffast-math"
CFLAGS="${CFLAGS} -ffunction-sections"
CFLAGS="${CFLAGS} -fgraphite-identity"
CFLAGS="${CFLAGS} -fipa-pta"
CFLAGS="${CFLAGS} -floop-nest-optimize"
CFLAGS="${CFLAGS} -floop-parallelize-all"
#CFLAGS="${CFLAGS} -flto"
#CFLAGS="${CFLAGS} -flto-compression-level=19"
CFLAGS="${CFLAGS} -fno-common"
#CFLAGS="${CFLAGS} -fno-plt"
CFLAGS="${CFLAGS} -fno-sanitize=all"
#CFLAGS="${CFLAGS} -fno-semantic-interposition"
CFLAGS="${CFLAGS} -fno-stack-protector"
CFLAGS="${CFLAGS} -fno-trapping-math"
CFLAGS="${CFLAGS} -fuse-linker-plugin"
CXXFLAGS="${CFLAGS}"
#CXXFLAGS="${CFLAGS} -fvisibility-inlines-hidden"
LDFLAGS="-fuse-ld=lld"
#LDFLAGS="${LDFLAGS} -Wl,-Bsymbolic-functions"
LDFLAGS="${LDFLAGS} -Wl,-O2"
#LDFLAGS="${LDFLAGS} -Wl,-z,now"
#LDFLAGS="${LDFLAGS} -Wl,-z,relro"
#LDFLAGS="${LDFLAGS} -Wl,--as-needed"
#LDFLAGS="${LDFLAGS} -Wl,--gc-sections"
#LDFLAGS="${LDFLAGS} -Wl,--icf=all"
# LLVM libc++
#CXXFLAGS="${CXXFLAGS} -nostdinc++ -I/usr/include/c++/v1"
# LLVM libc++
#LDFLAGS="${LDFLAGS} -nodefaultlibs -lc++ -lc++abi -lc -lgcc -lgcc_s -lm"
# sandboxing
#FEATURES="${FEATURES} -ipc-sandbox -network-sandbox -pid-sandbox -sandbox -userfetch -userpriv -usersandbox -usersync"
# testing
FEATURES="${FEATURES} -test"
